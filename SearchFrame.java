
package mypackage;

import com.toedter.calendar.JDateChooser;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.awt.print.PrinterException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author Ankit Limone
 * @author Mahak Gupta
 */
public class SearchFrame extends javax.swing.JFrame {

    private static final String username= "root";
    private static final String password= "Ankit@1516";
    private static final String dataConn= "jdbc:mysql://localhost:3306/posting_register";

    Connection sqlConn = null;
    PreparedStatement pst  =null;
    ResultSet rs = null;

    
    public SearchFrame() {
        
        initComponents();
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(16);
        
    }

    
    
    
    public void DBconn(){
     
    //try{}
    //catch(){}

    }

    
    public void close(){
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrp1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        uniquecodetxt = new javax.swing.JTextField();
        printbtn = new javax.swing.JButton();
        postRad = new javax.swing.JRadioButton();
        uniquecodeRad = new javax.swing.JRadioButton();
        dateRad = new javax.swing.JRadioButton();
        bloodRad = new javax.swing.JRadioButton();
        fromdate = new com.toedter.calendar.JDateChooser();
        todate = new com.toedter.calendar.JDateChooser();
        CBblood = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        CBpost = new javax.swing.JComboBox<>();
        uniquecodebtn = new javax.swing.JButton();
        postbtn = new javax.swing.JButton();
        bloodbtn = new javax.swing.JButton();
        datebtn = new javax.swing.JButton();
        txt_filepath = new javax.swing.JTextField();
        browsebtn = new javax.swing.JButton();
        exportbtn = new javax.swing.JButton();
        searchall = new javax.swing.JButton();
        counttxt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("पद स्थापना पंजी");
        setPreferredSize(new java.awt.Dimension(1860, 972));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(1872, 974));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 0, 129));
        jPanel2.setPreferredSize(new java.awt.Dimension(1925, 351));

        jButton1.setBackground(new java.awt.Color(254, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Go Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(254, 0, 0));
        deletebtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        deletebtn.setForeground(new java.awt.Color(255, 255, 255));
        deletebtn.setText("DELETE");
        deletebtn.setFocusPainted(false);
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        uniquecodetxt.setFont(new java.awt.Font("Kokila", 0, 24)); // NOI18N

        printbtn.setBackground(new java.awt.Color(254, 0, 0));
        printbtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        printbtn.setForeground(new java.awt.Color(255, 255, 255));
        printbtn.setText("PRINT");
        printbtn.setFocusPainted(false);
        printbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbtnActionPerformed(evt);
            }
        });

        btngrp1.add(postRad);
        postRad.setFont(new java.awt.Font("Kokila", 1, 36)); // NOI18N
        postRad.setForeground(new java.awt.Color(255, 255, 255));
        postRad.setText("  पद :");

        btngrp1.add(uniquecodeRad);
        uniquecodeRad.setFont(new java.awt.Font("Kokila", 1, 36)); // NOI18N
        uniquecodeRad.setForeground(new java.awt.Color(255, 255, 255));
        uniquecodeRad.setText("  यूनिक कोड :");
        uniquecodeRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uniquecodeRadActionPerformed(evt);
            }
        });

        btngrp1.add(dateRad);
        dateRad.setFont(new java.awt.Font("Kokila", 1, 36)); // NOI18N
        dateRad.setForeground(new java.awt.Color(255, 255, 255));
        dateRad.setText("  दिनांक :");

        btngrp1.add(bloodRad);
        bloodRad.setFont(new java.awt.Font("Kokila", 1, 36)); // NOI18N
        bloodRad.setForeground(new java.awt.Color(255, 255, 255));
        bloodRad.setText("  ब्लड ग्रुप :");

        CBblood.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        CBblood.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));

        jLabel2.setFont(new java.awt.Font("Kokila", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("से :");

        jLabel1.setFont(new java.awt.Font("Kokila", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("तक :");

        CBpost.setFont(new java.awt.Font("Kruti Dev 010", 0, 24)); // NOI18N
        CBpost.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "vfr- iqfyl vèkh{kd", "iqfyl mi vèkh{kd", "fujh{kd", "fujh{kd ¼efgyk½", "m-fu- ¼iq#\"k½", "m-fu- ¼efgyk½", "lmfu ¼iq#\"k½", "dk- lmfu- ¼iq#\"k½", "dk-e-lmfu-", "ç-vkj-", "dk-ç- vkj-", "ç-vkj- ¼efgyk½", "dk-e-ç-vkj-", "vkj{kd", "vkj{kd ¼efgyk½", "vkj{kd VªsMesu", "'kh?kzys[kd ¼LVsuks½", "mfu- ¼v½", "lmfu- ¼v½", "m-fu- ¼jsfM;ksa½", "ç-vkj-¼jsfM;ksa½", "vkj{kd ¼jsfM;ksa½", "ç-vkj- ¼vkElZ½", "vkj{kd ¼vkElZ½", "vkj{kd ¼M‚x gS.Myj½", "vkj{kd ¼pkyd½" }));
        CBpost.setPreferredSize(new java.awt.Dimension(198, 31));

        uniquecodebtn.setBackground(new java.awt.Color(254, 0, 0));
        uniquecodebtn.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        uniquecodebtn.setForeground(new java.awt.Color(255, 255, 255));
        uniquecodebtn.setText("Search");
        uniquecodebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uniquecodebtnActionPerformed(evt);
            }
        });

        postbtn.setBackground(new java.awt.Color(254, 0, 0));
        postbtn.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        postbtn.setForeground(new java.awt.Color(255, 255, 255));
        postbtn.setText("Search");
        postbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postbtnActionPerformed(evt);
            }
        });

        bloodbtn.setBackground(new java.awt.Color(254, 0, 0));
        bloodbtn.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        bloodbtn.setForeground(new java.awt.Color(255, 255, 255));
        bloodbtn.setText("Search");
        bloodbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodbtnActionPerformed(evt);
            }
        });

        datebtn.setBackground(new java.awt.Color(254, 0, 0));
        datebtn.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        datebtn.setForeground(new java.awt.Color(255, 255, 255));
        datebtn.setText("Search");
        datebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datebtnActionPerformed(evt);
            }
        });

        txt_filepath.setFont(new java.awt.Font("Kokila", 0, 24)); // NOI18N

        browsebtn.setBackground(new java.awt.Color(254, 0, 0));
        browsebtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        browsebtn.setForeground(new java.awt.Color(255, 255, 255));
        browsebtn.setText("Browse");
        browsebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browsebtnActionPerformed(evt);
            }
        });

        exportbtn.setBackground(new java.awt.Color(254, 0, 0));
        exportbtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        exportbtn.setForeground(new java.awt.Color(255, 255, 255));
        exportbtn.setText("Export to Excel");
        exportbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportbtnActionPerformed(evt);
            }
        });

        searchall.setBackground(new java.awt.Color(254, 0, 0));
        searchall.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        searchall.setForeground(new java.awt.Color(255, 255, 255));
        searchall.setText("Show Data");
        searchall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchallActionPerformed(evt);
            }
        });

        counttxt.setFont(new java.awt.Font("Kokila", 0, 24)); // NOI18N

        jButton2.setBackground(new java.awt.Color(254, 0, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Count");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(txt_filepath, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(browsebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(exportbtn)
                        .addGap(238, 238, 238)
                        .addComponent(jButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uniquecodeRad)
                            .addComponent(postRad))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(CBpost, javax.swing.GroupLayout.Alignment.LEADING, 0, 281, Short.MAX_VALUE)
                            .addComponent(uniquecodetxt, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(postbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(uniquecodebtn))
                        .addGap(81, 81, 81)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(bloodRad)
                                .addGap(29, 29, 29)
                                .addComponent(CBblood, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(bloodbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(counttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(dateRad)
                                        .addGap(47, 47, 47)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(fromdate, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(53, 53, 53)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(todate, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(datebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(printbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(deletebtn)
                    .addComponent(searchall))
                .addGap(32, 32, 32))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(uniquecodetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(uniquecodeRad))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(bloodRad)
                                    .addComponent(CBblood, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bloodbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2))
                            .addComponent(uniquecodebtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CBpost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(postbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(postRad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dateRad)
                                .addComponent(jLabel2))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(datebtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(fromdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(todate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addGap(107, 107, 107)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(counttxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_filepath, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(browsebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(exportbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(printbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(searchall, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );

        jTable3.setFont(new java.awt.Font("Kruti Dev 010", 0, 25)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "यूनिक कोड", "पद", "बैज क्रमांक", "नाम", "पिता का नाम", "वर्ग", "आधार क्रमांक", "ग्रह जिला", "स्थायी पता", "वर्तमान पता", "बुनियादी प्रक्षिक्षण", "यदि अनुत्तीर्ण हैं तो", "पूर्व इकाई", "शिक्षा", "कोर्स", "जीवनसाथी का नाम", "लिंग", "मोबाइल नं", "व्यवसाय", "जीवनसाथी का आधार क्रमांक", "पिता का आधार क्रमांक", "माता का नाम", "माता का आधार क्रमांक", "बच्चे", "बच्चो का व्यवसाय", "उत्तराधिकारी का पता"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable3.setRowHeight(32);
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(3).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(4).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(5).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(6).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(7).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(8).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(9).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(10).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(11).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(12).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(13).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(14).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(15).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(16).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(17).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(18).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(19).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(20).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(21).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(22).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(23).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(24).setPreferredWidth(200);
            jTable3.getColumnModel().getColumn(25).setPreferredWidth(200);
        }

        jTable2.setFont(new java.awt.Font("Segoe UI", 0, 21)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "यूनिक_कोड", "पैन_कार्ड_क्रमांक", "GPF_DPF_NPS_no", "बैंक_खाता_क्र", "आईएफएससी_कोड", "जन्म_दिनांक", "ब्लड_ग्रुप", "PRAN_क्रमांक", "भर्ती_की_दिनांक", "प्रथम_नियुक्ति_इकाई", "वर्तमान_पदोन्नति_दिनांक", "मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक", "बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक", "उत्तराधिकारी_का_खाता_क्रमांक", "उत्तराधिकारी_का_बैंक_IFSC_कोड"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable2.setRowHeight(32);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(7).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(8).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(9).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(10).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(11).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(12).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(13).setPreferredWidth(200);
            jTable2.getColumnModel().getColumn(14).setPreferredWidth(200);
        }

        jPanel3.setBackground(new java.awt.Color(0, 0, 129));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Developed & Designed By Ankit Limone & Mahak Gupta ( students of ) International Institute of Professional Studies, Devi Ailya Vishwavidyalaya, Indore");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(129, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(380, 380, 380))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1814, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1829, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        close();
        InsertFrame IF = new InsertFrame();
        IF.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    public void showData(String d1, String d2) throws ClassNotFoundException, SQLException{
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn,username,password);
            ResultSet rs;
            PreparedStatement st;
            
            try {
                if (d1.equals("") || d2.equals("")) {
                   st = sqlConn.prepareStatement("select * from personal_details v INNER JOIN training_details pv ON v.यूनिक_कोड = pv.यूनिक_कोड INNER JOIN successors_details ovp ON ovp.यूनिक_कोड = pv.यूनिक_कोड");
                    
                }
                else{
                    st = sqlConn.prepareStatement("select * from personal_details v INNER JOIN training_details pv ON v.यूनिक_कोड = pv.यूनिक_कोड INNER JOIN successors_details ovp ON ovp.यूनिक_कोड = pv.यूनिक_कोड WHERE pv.भर्ती_की_दिनांक BETWEEN ? AND ?");
                    st.setString(1, d1);
                    st.setString(2, d2);
                }
                rs = st.executeQuery();
                
                
                Object[] row;
                
                while(rs.next())
                        {
                            String यूनिक_कोड = String.valueOf(rs.getInt("यूनिक_कोड"));
            String पद = rs.getString("पद");
            String बैज_क्रमांक = String.valueOf(rs.getLong("बैज_क्रमांक"));
            String नाम = rs.getString("नाम");
            String पिता_का_नाम = rs.getString("पिता_का_नाम");
            String वर्ग = rs.getString("वर्ग");
            String आधार_क्रमांक = String.valueOf(rs.getLong("आधार_क्रमांक"));
            String पैन_कार्ड_क्रमांक = rs.getString("पैन_कार्ड_क्रमांक");
            String GPF_DPF_NPS_no = rs.getString("GPF_DPF_NPS_no");
            String बैंक_खाता_क्र = String.valueOf(rs.getLong("बैंक_खाता_क्र"));
            String आईएफएससी_कोड = rs.getString("आईएफएससी_कोड");
            String ग्रह_जिला = rs.getString("ग्रह_जिला");
            String जन्म_दिनांक = rs.getString("जन्म_दिनांक");
            String स्थायी_पता = rs.getString("स्थायी_पता");
            String वर्तमान_पता = rs.getString("वर्तमान_पता");
            String ब्लड_ग्रुप = rs.getString("ब्लड_ग्रुप");
            String PRAN_क्रमांक = String.valueOf(rs.getLong("PRAN_क्रमांक"));
            String बुनियादी_प्रक्षिक्षण = rs.getString("बुनियादी_प्रक्षिक्षण");
            String यदि_अनुत्तीर्ण_हैं_तो = rs.getString("यदि_अनुत्तीर्ण_हैं_तो");
            String भर्ती_की_दिनांक = rs.getString("भर्ती_की_दिनांक");
            String प्रथम_नियुक्ति_इकाई = rs.getString("प्रथम_नियुक्ति_इकाई");
            String पूर्व_इकाई = rs.getString("पूर्व_इकाई");
            String वर्तमान_पदोन्नति_दिनांक = rs.getString("वर्तमान_पदोन्नति_दिनांक");
            String मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक = rs.getString("मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक");
            String बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक = rs.getString("बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक");
            String शिक्षा = rs.getString("शिक्षा");
            String कोर्स = rs.getString("कोर्स");
            
            String जीवनसाथी_का_नाम = rs.getString("जीवनसाथी_का_नाम");
            String लिंग = rs.getString("लिंग");
            String मोबाइल_नं = String.valueOf(rs.getLong("मोबाइल_नं"));
            String व्यवसाय = rs.getString("व्यवसाय");
            String जीवनसाथी_का_आधार_क्रमांक = String.valueOf(rs.getLong("जीवनसाथी_का_आधार_क्रमांक"));
            String पिता_का_आधार_क्रमांक = String.valueOf(rs.getLong("पिता_का_आधार_क्रमांक"));
            String माता_का_नाम = rs.getString("माता_का_नाम");
            String माता_का_आधार_क्रमांक = String.valueOf(rs.getLong("माता_का_आधार_क्रमांक"));
            String बच्चे = rs.getString("बच्चे");
            String बच्चो_का_व्यवसाय = rs.getString("बच्चो_का_व्यवसाय");
            String उत्तराधिकारी_का_पता = rs.getString("उत्तराधिकारी_का_पता");
            String उत्तराधिकारी_का_खाता_क्रमांक = String.valueOf(rs.getLong("उत्तराधिकारी_का_खाता_क्रमांक"));
            String उत्तराधिकारी_का_बैंक_IFSC_कोड = rs.getString("उत्तराधिकारी_का_बैंक_IFSC_कोड");
            

            String tbData[] = {यूनिक_कोड,पैन_कार्ड_क्रमांक,GPF_DPF_NPS_no,बैंक_खाता_क्र,आईएफएससी_कोड,जन्म_दिनांक,ब्लड_ग्रुप,PRAN_क्रमांक,भर्ती_की_दिनांक,प्रथम_नियुक्ति_इकाई,वर्तमान_पदोन्नति_दिनांक,मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक,बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक,उत्तराधिकारी_का_खाता_क्रमांक,उत्तराधिकारी_का_बैंक_IFSC_कोड};
            
            String tbDataH[] = {यूनिक_कोड,पद,बैज_क्रमांक,नाम,पिता_का_नाम,वर्ग,आधार_क्रमांक,ग्रह_जिला,स्थायी_पता,वर्तमान_पता,बुनियादी_प्रक्षिक्षण,यदि_अनुत्तीर्ण_हैं_तो,पूर्व_इकाई,शिक्षा,कोर्स,जीवनसाथी_का_नाम,लिंग,मोबाइल_नं,व्यवसाय,जीवनसाथी_का_आधार_क्रमांक,पिता_का_आधार_क्रमांक,माता_का_नाम,माता_का_आधार_क्रमांक,बच्चे,बच्चो_का_व्यवसाय,उत्तराधिकारी_का_पता};
            
            DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
            DefaultTableModel tblModelH = (DefaultTableModel)jTable3.getModel();
            tblModel.addRow(tbData);
            tblModelH.addRow(tbDataH);
                        }
                
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
    
    
    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
       String it = uniquecodetxt.getText();
        try {
            String sql = "DELETE v,pv,ovp FROM personal_details v JOIN training_details pv ON v.यूनिक_कोड=pv.यूनिक_कोड JOIN successors_details ovp ON pv.यूनिक_कोड=ovp.यूनिक_कोड WHERE v.यूनिक_कोड='"+it+"'";
            PreparedStatement pst = sqlConn.prepareStatement(sql);
            pst.execute();
            
            JOptionPane.showMessageDialog(this, "Deleted Successfully");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Not Found");
        }
    }//GEN-LAST:event_deletebtnActionPerformed

    private void uniquecodeRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uniquecodeRadActionPerformed
        
    }//GEN-LAST:event_uniquecodeRadActionPerformed

    private void uniquecodebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uniquecodebtnActionPerformed
             

        try
        {
            cleartable();
           Class.forName("com.mysql.cj.jdbc.Driver");
           sqlConn = DriverManager.getConnection(dataConn,username,password);
           
            String sqll = "select * from personal_details v INNER JOIN training_details pv ON v.यूनिक_कोड = pv.यूनिक_कोड INNER JOIN successors_details ovp ON ovp.यूनिक_कोड = pv.यूनिक_कोड WHERE v.यूनिक_कोड=?";
            PreparedStatement st = sqlConn.prepareStatement(sqll);
            
            String it = uniquecodetxt.getText();
            st.setString(1, it);
            rs = st.executeQuery();
            
            while(rs.next()){

            String यूनिक_कोड = String.valueOf(rs.getInt("यूनिक_कोड"));
            String पद = rs.getString("पद");
            String बैज_क्रमांक = String.valueOf(rs.getInt("बैज_क्रमांक"));
            String नाम = rs.getString("नाम");
            String पिता_का_नाम = rs.getString("पिता_का_नाम");
            String वर्ग = rs.getString("वर्ग");
            String आधार_क्रमांक = String.valueOf(rs.getLong("आधार_क्रमांक"));
            String पैन_कार्ड_क्रमांक = rs.getString("पैन_कार्ड_क्रमांक");
            String GPF_DPF_NPS_no = rs.getString("GPF_DPF_NPS_no");
            String बैंक_खाता_क्र = String.valueOf(rs.getLong("बैंक_खाता_क्र"));
            String आईएफएससी_कोड = rs.getString("आईएफएससी_कोड");
            String ग्रह_जिला = rs.getString("ग्रह_जिला");
            String जन्म_दिनांक = rs.getString("जन्म_दिनांक");
            String स्थायी_पता = rs.getString("स्थायी_पता");
            String वर्तमान_पता = rs.getString("वर्तमान_पता");
            String ब्लड_ग्रुप = rs.getString("ब्लड_ग्रुप");
            String PRAN_क्रमांक = String.valueOf(rs.getLong("PRAN_क्रमांक"));
            String बुनियादी_प्रक्षिक्षण = rs.getString("बुनियादी_प्रक्षिक्षण");
            String यदि_अनुत्तीर्ण_हैं_तो = rs.getString("यदि_अनुत्तीर्ण_हैं_तो");
            String भर्ती_की_दिनांक = rs.getString("भर्ती_की_दिनांक");
            String प्रथम_नियुक्ति_इकाई = rs.getString("प्रथम_नियुक्ति_इकाई");
            String पूर्व_इकाई = rs.getString("पूर्व_इकाई");
            String वर्तमान_पदोन्नति_दिनांक = rs.getString("वर्तमान_पदोन्नति_दिनांक");
            String मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक = rs.getString("मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक");
            String बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक = rs.getString("बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक");
            String शिक्षा = rs.getString("शिक्षा");
            String कोर्स = rs.getString("कोर्स");
            
            String जीवनसाथी_का_नाम = rs.getString("जीवनसाथी_का_नाम");
            String लिंग = rs.getString("लिंग");
            String मोबाइल_नं = String.valueOf(rs.getLong("मोबाइल_नं"));
            String व्यवसाय = rs.getString("व्यवसाय");
            String जीवनसाथी_का_आधार_क्रमांक = String.valueOf(rs.getLong("जीवनसाथी_का_आधार_क्रमांक"));
            String पिता_का_आधार_क्रमांक = String.valueOf(rs.getLong("पिता_का_आधार_क्रमांक"));
            String माता_का_नाम = rs.getString("माता_का_नाम");
            String माता_का_आधार_क्रमांक = String.valueOf(rs.getLong("माता_का_आधार_क्रमांक"));
            String बच्चे = rs.getString("बच्चे");
            String बच्चो_का_व्यवसाय = rs.getString("बच्चो_का_व्यवसाय");
            String उत्तराधिकारी_का_पता = rs.getString("उत्तराधिकारी_का_पता");
            String उत्तराधिकारी_का_खाता_क्रमांक = String.valueOf(rs.getLong("उत्तराधिकारी_का_खाता_क्रमांक"));
            String उत्तराधिकारी_का_बैंक_IFSC_कोड = rs.getString("उत्तराधिकारी_का_बैंक_IFSC_कोड");
            

            String tbData[] = {यूनिक_कोड,पैन_कार्ड_क्रमांक,GPF_DPF_NPS_no,बैंक_खाता_क्र,आईएफएससी_कोड,जन्म_दिनांक,ब्लड_ग्रुप,PRAN_क्रमांक,भर्ती_की_दिनांक,प्रथम_नियुक्ति_इकाई,वर्तमान_पदोन्नति_दिनांक,मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक,बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक,उत्तराधिकारी_का_खाता_क्रमांक,उत्तराधिकारी_का_बैंक_IFSC_कोड};
            
            String tbDataH[] = {यूनिक_कोड,पद,बैज_क्रमांक,नाम,पिता_का_नाम,वर्ग,आधार_क्रमांक,ग्रह_जिला,स्थायी_पता,वर्तमान_पता,बुनियादी_प्रक्षिक्षण,यदि_अनुत्तीर्ण_हैं_तो,पूर्व_इकाई,शिक्षा,कोर्स,जीवनसाथी_का_नाम,लिंग,मोबाइल_नं,व्यवसाय,जीवनसाथी_का_आधार_क्रमांक,पिता_का_आधार_क्रमांक,माता_का_नाम,माता_का_आधार_क्रमांक,बच्चे,बच्चो_का_व्यवसाय,उत्तराधिकारी_का_पता};
            
            DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
            DefaultTableModel tblModelH = (DefaultTableModel)jTable3.getModel();
            tblModel.addRow(tbData);
            tblModelH.addRow(tbDataH);
            } 
             
        } catch (SQLException ex) {
            Logger.getLogger(SearchFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SearchFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_uniquecodebtnActionPerformed

    private void postbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postbtnActionPerformed
       
        try
        {
            cleartable();
           Class.forName("com.mysql.cj.jdbc.Driver");
           sqlConn = DriverManager.getConnection(dataConn,username,password);
           
            String sqll = "select * from personal_details v INNER JOIN training_details pv ON v.यूनिक_कोड = pv.यूनिक_कोड INNER JOIN successors_details ovp ON ovp.यूनिक_कोड = pv.यूनिक_कोड WHERE v.पद=?";
            PreparedStatement st = sqlConn.prepareStatement(sqll);
            
            String post = CBpost.getSelectedItem().toString();
            st.setString(1, post);
            rs = st.executeQuery();
            
            while(rs.next()){

            String यूनिक_कोड = String.valueOf(rs.getLong("यूनिक_कोड"));
            String पद = rs.getString("पद");
            String बैज_क्रमांक = String.valueOf(rs.getInt("बैज_क्रमांक"));
            String नाम = rs.getString("नाम");
            String पिता_का_नाम = rs.getString("पिता_का_नाम");
            String वर्ग = rs.getString("वर्ग");
            String आधार_क्रमांक = String.valueOf(rs.getLong("आधार_क्रमांक"));
            String पैन_कार्ड_क्रमांक = rs.getString("पैन_कार्ड_क्रमांक");
            String GPF_DPF_NPS_no = rs.getString("GPF_DPF_NPS_no");
            String बैंक_खाता_क्र = String.valueOf(rs.getLong("बैंक_खाता_क्र"));
            String आईएफएससी_कोड = rs.getString("आईएफएससी_कोड");
            String ग्रह_जिला = rs.getString("ग्रह_जिला");
            String जन्म_दिनांक = rs.getString("जन्म_दिनांक");
            String स्थायी_पता = rs.getString("स्थायी_पता");
            String वर्तमान_पता = rs.getString("वर्तमान_पता");
            String ब्लड_ग्रुप = rs.getString("ब्लड_ग्रुप");
            String PRAN_क्रमांक = String.valueOf(rs.getLong("PRAN_क्रमांक"));
            String बुनियादी_प्रक्षिक्षण = rs.getString("बुनियादी_प्रक्षिक्षण");
            String यदि_अनुत्तीर्ण_हैं_तो = rs.getString("यदि_अनुत्तीर्ण_हैं_तो");
            String भर्ती_की_दिनांक = rs.getString("भर्ती_की_दिनांक");
            String प्रथम_नियुक्ति_इकाई = rs.getString("प्रथम_नियुक्ति_इकाई");
            String पूर्व_इकाई = rs.getString("पूर्व_इकाई");
            String वर्तमान_पदोन्नति_दिनांक = rs.getString("वर्तमान_पदोन्नति_दिनांक");
            String मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक = rs.getString("मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक");
            String बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक = rs.getString("बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक");
            String शिक्षा = rs.getString("शिक्षा");
            String कोर्स = rs.getString("कोर्स");
            
            String जीवनसाथी_का_नाम = rs.getString("जीवनसाथी_का_नाम");
            String लिंग = rs.getString("लिंग");
            String मोबाइल_नं = String.valueOf(rs.getLong("मोबाइल_नं"));
            String व्यवसाय = rs.getString("व्यवसाय");
            String जीवनसाथी_का_आधार_क्रमांक = String.valueOf(rs.getLong("जीवनसाथी_का_आधार_क्रमांक"));
            String पिता_का_आधार_क्रमांक = String.valueOf(rs.getLong("पिता_का_आधार_क्रमांक"));
            String माता_का_नाम = rs.getString("माता_का_नाम");
            String माता_का_आधार_क्रमांक = String.valueOf(rs.getLong("माता_का_आधार_क्रमांक"));
            String बच्चे = rs.getString("बच्चे");
            String बच्चो_का_व्यवसाय = rs.getString("बच्चो_का_व्यवसाय");
            String उत्तराधिकारी_का_पता = rs.getString("उत्तराधिकारी_का_पता");
            String उत्तराधिकारी_का_खाता_क्रमांक = String.valueOf(rs.getLong("उत्तराधिकारी_का_खाता_क्रमांक"));
            String उत्तराधिकारी_का_बैंक_IFSC_कोड = rs.getString("उत्तराधिकारी_का_बैंक_IFSC_कोड");
            

            String tbData[] = {यूनिक_कोड,पैन_कार्ड_क्रमांक,GPF_DPF_NPS_no,बैंक_खाता_क्र,आईएफएससी_कोड,जन्म_दिनांक,ब्लड_ग्रुप,PRAN_क्रमांक,भर्ती_की_दिनांक,प्रथम_नियुक्ति_इकाई,वर्तमान_पदोन्नति_दिनांक,मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक,बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक,उत्तराधिकारी_का_खाता_क्रमांक,उत्तराधिकारी_का_बैंक_IFSC_कोड};
            
            String tbDataH[] = {यूनिक_कोड,पद,बैज_क्रमांक,नाम,पिता_का_नाम,वर्ग,आधार_क्रमांक,ग्रह_जिला,स्थायी_पता,वर्तमान_पता,बुनियादी_प्रक्षिक्षण,यदि_अनुत्तीर्ण_हैं_तो,पूर्व_इकाई,शिक्षा,कोर्स,जीवनसाथी_का_नाम,लिंग,मोबाइल_नं,व्यवसाय,जीवनसाथी_का_आधार_क्रमांक,पिता_का_आधार_क्रमांक,माता_का_नाम,माता_का_आधार_क्रमांक,बच्चे,बच्चो_का_व्यवसाय,उत्तराधिकारी_का_पता};
            
            DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
            DefaultTableModel tblModelH = (DefaultTableModel)jTable3.getModel();
            tblModel.addRow(tbData);
            tblModelH.addRow(tbDataH);

            } 
             
             //rs = pst.executeQuery();
            

        } catch (SQLException ex) {
            Logger.getLogger(SearchFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SearchFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_postbtnActionPerformed

    private void bloodbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodbtnActionPerformed
        try
        {
            cleartable();
            Class.forName("com.mysql.cj.jdbc.Driver");
            sqlConn = DriverManager.getConnection(dataConn,username,password);
           
            String sqll = "select * from personal_details v INNER JOIN training_details pv ON v.यूनिक_कोड = pv.यूनिक_कोड INNER JOIN successors_details ovp ON ovp.यूनिक_कोड = pv.यूनिक_कोड WHERE v.ब्लड_ग्रुप=?";
            PreparedStatement st = sqlConn.prepareStatement(sqll);
            
            String blood = CBblood.getSelectedItem().toString();
            st.setString(1, blood);
            rs = st.executeQuery();
            
            while(rs.next()){

            String यूनिक_कोड = String.valueOf(rs.getLong("यूनिक_कोड"));
            String पद = rs.getString("पद");
            String बैज_क्रमांक = String.valueOf(rs.getLong("बैज_क्रमांक"));
            String नाम = rs.getString("नाम");
            String पिता_का_नाम = rs.getString("पिता_का_नाम");
            String वर्ग = rs.getString("वर्ग");
            String आधार_क्रमांक = String.valueOf(rs.getLong("आधार_क्रमांक"));
            String पैन_कार्ड_क्रमांक = rs.getString("पैन_कार्ड_क्रमांक");
            String GPF_DPF_NPS_no = rs.getString("GPF_DPF_NPS_no");
            String बैंक_खाता_क्र = String.valueOf(rs.getLong("बैंक_खाता_क्र"));
            String आईएफएससी_कोड = rs.getString("आईएफएससी_कोड");
            String ग्रह_जिला = rs.getString("ग्रह_जिला");
            String जन्म_दिनांक = rs.getString("जन्म_दिनांक");
            String स्थायी_पता = rs.getString("स्थायी_पता");
            String वर्तमान_पता = rs.getString("वर्तमान_पता");
            String ब्लड_ग्रुप = rs.getString("ब्लड_ग्रुप");
            String PRAN_क्रमांक = String.valueOf(rs.getLong("PRAN_क्रमांक"));
            String बुनियादी_प्रक्षिक्षण = rs.getString("बुनियादी_प्रक्षिक्षण");
            String यदि_अनुत्तीर्ण_हैं_तो = rs.getString("यदि_अनुत्तीर्ण_हैं_तो");
            String भर्ती_की_दिनांक = rs.getString("भर्ती_की_दिनांक");
            String प्रथम_नियुक्ति_इकाई = rs.getString("प्रथम_नियुक्ति_इकाई");
            String पूर्व_इकाई = rs.getString("पूर्व_इकाई");
            String वर्तमान_पदोन्नति_दिनांक = rs.getString("वर्तमान_पदोन्नति_दिनांक");
            String मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक = rs.getString("मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक");
            String बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक = rs.getString("बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक");
            String शिक्षा = rs.getString("शिक्षा");
            String कोर्स = rs.getString("कोर्स");
            
            String जीवनसाथी_का_नाम = rs.getString("जीवनसाथी_का_नाम");
            String लिंग = rs.getString("लिंग");
            String मोबाइल_नं = String.valueOf(rs.getLong("मोबाइल_नं"));
            String व्यवसाय = rs.getString("व्यवसाय");
            String जीवनसाथी_का_आधार_क्रमांक = String.valueOf(rs.getLong("जीवनसाथी_का_आधार_क्रमांक"));
            String पिता_का_आधार_क्रमांक = String.valueOf(rs.getLong("पिता_का_आधार_क्रमांक"));
            String माता_का_नाम = rs.getString("माता_का_नाम");
            String माता_का_आधार_क्रमांक = String.valueOf(rs.getLong("माता_का_आधार_क्रमांक"));
            String बच्चे = rs.getString("बच्चे");
            String बच्चो_का_व्यवसाय = rs.getString("बच्चो_का_व्यवसाय");
            String उत्तराधिकारी_का_पता = rs.getString("उत्तराधिकारी_का_पता");
            String उत्तराधिकारी_का_खाता_क्रमांक = String.valueOf(rs.getLong("उत्तराधिकारी_का_खाता_क्रमांक"));
            String उत्तराधिकारी_का_बैंक_IFSC_कोड = rs.getString("उत्तराधिकारी_का_बैंक_IFSC_कोड");
            

            String tbData[] = {यूनिक_कोड,पैन_कार्ड_क्रमांक,GPF_DPF_NPS_no,बैंक_खाता_क्र,आईएफएससी_कोड,जन्म_दिनांक,ब्लड_ग्रुप,PRAN_क्रमांक,भर्ती_की_दिनांक,प्रथम_नियुक्ति_इकाई,वर्तमान_पदोन्नति_दिनांक,मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक,बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक,उत्तराधिकारी_का_खाता_क्रमांक,उत्तराधिकारी_का_बैंक_IFSC_कोड};
            
            String tbDataH[] = {यूनिक_कोड,पद,बैज_क्रमांक,नाम,पिता_का_नाम,वर्ग,आधार_क्रमांक,ग्रह_जिला,स्थायी_पता,वर्तमान_पता,बुनियादी_प्रक्षिक्षण,यदि_अनुत्तीर्ण_हैं_तो,पूर्व_इकाई,शिक्षा,कोर्स,जीवनसाथी_का_नाम,लिंग,मोबाइल_नं,व्यवसाय,जीवनसाथी_का_आधार_क्रमांक,पिता_का_आधार_क्रमांक,माता_का_नाम,माता_का_आधार_क्रमांक,बच्चे,बच्चो_का_व्यवसाय,उत्तराधिकारी_का_पता};
            
            DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
            DefaultTableModel tblModelH = (DefaultTableModel)jTable3.getModel();
            tblModel.addRow(tbData);
            tblModelH.addRow(tbDataH);

            } 
             
             //rs = pst.executeQuery();
            

        } catch (SQLException ex) {
            Logger.getLogger(SearchFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SearchFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bloodbtnActionPerformed

    private void datebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datebtnActionPerformed
        
        try {
            cleartable();
            
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String From = sdf.format(fromdate.getDate());
            String To = sdf.format(todate.getDate());
            showData(From,To);
            
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_datebtnActionPerformed

    private void printbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbtnActionPerformed
         try {
            boolean print = jTable2.print();
            boolean printH = jTable3.print();
            if (!print) {
                JOptionPane.showMessageDialog(null, "Unable To Print !!..");
            }
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_printbtnActionPerformed

    private void browsebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browsebtnActionPerformed
        JFileChooser filechooser = new JFileChooser();
        filechooser.showOpenDialog(this);
        
        
        try {
            File f = filechooser.getSelectedFile();
            String path = f.getAbsolutePath();
            
            path = path+".xlsx";
            txt_filepath.setText(path);
            
         
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_browsebtnActionPerformed

    private void exportbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportbtnActionPerformed
        exportToExcel();
    }//GEN-LAST:event_exportbtnActionPerformed

    private void searchallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchallActionPerformed
     try
        {
            cleartable();
           Class.forName("com.mysql.cj.jdbc.Driver");
           sqlConn = DriverManager.getConnection(dataConn,username,password);
           
            String sqll = "select * from personal_details v INNER JOIN training_details pv ON v.यूनिक_कोड = pv.यूनिक_कोड INNER JOIN successors_details ovp ON ovp.यूनिक_कोड = pv.यूनिक_कोड";
            PreparedStatement st = sqlConn.prepareStatement(sqll);
            
            
            rs = st.executeQuery();
            
            while(rs.next()){

            String यूनिक_कोड = String.valueOf(rs.getInt("यूनिक_कोड"));
            String पद = rs.getString("पद");
            String बैज_क्रमांक = String.valueOf(rs.getInt("बैज_क्रमांक"));
            String नाम = rs.getString("नाम");
            String पिता_का_नाम = rs.getString("पिता_का_नाम");
            String वर्ग = rs.getString("वर्ग");
            String आधार_क्रमांक = String.valueOf(rs.getLong("आधार_क्रमांक"));
            String पैन_कार्ड_क्रमांक = rs.getString("पैन_कार्ड_क्रमांक");
            String GPF_DPF_NPS_no = rs.getString("GPF_DPF_NPS_no");
            String बैंक_खाता_क्र = String.valueOf(rs.getLong("बैंक_खाता_क्र"));
            String आईएफएससी_कोड = rs.getString("आईएफएससी_कोड");
            String ग्रह_जिला = rs.getString("ग्रह_जिला");
            String जन्म_दिनांक = rs.getString("जन्म_दिनांक");
            String स्थायी_पता = rs.getString("स्थायी_पता");
            String वर्तमान_पता = rs.getString("वर्तमान_पता");
            String ब्लड_ग्रुप = rs.getString("ब्लड_ग्रुप");
            String PRAN_क्रमांक = String.valueOf(rs.getLong("PRAN_क्रमांक"));
            String बुनियादी_प्रक्षिक्षण = rs.getString("बुनियादी_प्रक्षिक्षण");
            String यदि_अनुत्तीर्ण_हैं_तो = rs.getString("यदि_अनुत्तीर्ण_हैं_तो");
            String भर्ती_की_दिनांक = rs.getString("भर्ती_की_दिनांक");
            String प्रथम_नियुक्ति_इकाई = rs.getString("प्रथम_नियुक्ति_इकाई");
            String पूर्व_इकाई = rs.getString("पूर्व_इकाई");
            String वर्तमान_पदोन्नति_दिनांक = rs.getString("वर्तमान_पदोन्नति_दिनांक");
            String मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक = rs.getString("मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक");
            String बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक = rs.getString("बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक");
            String शिक्षा = rs.getString("शिक्षा");
            String कोर्स = rs.getString("कोर्स");
            
            String जीवनसाथी_का_नाम = rs.getString("जीवनसाथी_का_नाम");
            String लिंग = rs.getString("लिंग");
            String मोबाइल_नं = String.valueOf(rs.getLong("मोबाइल_नं"));
            String व्यवसाय = rs.getString("व्यवसाय");
            String जीवनसाथी_का_आधार_क्रमांक = String.valueOf(rs.getLong("जीवनसाथी_का_आधार_क्रमांक"));
            String पिता_का_आधार_क्रमांक = String.valueOf(rs.getLong("पिता_का_आधार_क्रमांक"));
            String माता_का_नाम = rs.getString("माता_का_नाम");
            String माता_का_आधार_क्रमांक = String.valueOf(rs.getLong("माता_का_आधार_क्रमांक"));
            String बच्चे = rs.getString("बच्चे");
            String बच्चो_का_व्यवसाय = rs.getString("बच्चो_का_व्यवसाय");
            String उत्तराधिकारी_का_पता = rs.getString("उत्तराधिकारी_का_पता");
            String उत्तराधिकारी_का_खाता_क्रमांक = String.valueOf(rs.getLong("उत्तराधिकारी_का_खाता_क्रमांक"));
            String उत्तराधिकारी_का_बैंक_IFSC_कोड = rs.getString("उत्तराधिकारी_का_बैंक_IFSC_कोड");
            

            String tbData[] = {यूनिक_कोड,पैन_कार्ड_क्रमांक,GPF_DPF_NPS_no,बैंक_खाता_क्र,आईएफएससी_कोड,जन्म_दिनांक,ब्लड_ग्रुप,PRAN_क्रमांक,भर्ती_की_दिनांक,प्रथम_नियुक्ति_इकाई,वर्तमान_पदोन्नति_दिनांक,मान_उ_न्याया_इंदौर_में_तैनाती_दिनांक,बुनियादी_प्रक्षिक्षण_उत्तीर्ण_दिनांक,उत्तराधिकारी_का_खाता_क्रमांक,उत्तराधिकारी_का_बैंक_IFSC_कोड};
            
            String tbDataH[] = {यूनिक_कोड,पद,बैज_क्रमांक,नाम,पिता_का_नाम,वर्ग,आधार_क्रमांक,ग्रह_जिला,स्थायी_पता,वर्तमान_पता,बुनियादी_प्रक्षिक्षण,यदि_अनुत्तीर्ण_हैं_तो,पूर्व_इकाई,शिक्षा,कोर्स,जीवनसाथी_का_नाम,लिंग,मोबाइल_नं,व्यवसाय,जीवनसाथी_का_आधार_क्रमांक,पिता_का_आधार_क्रमांक,माता_का_नाम,माता_का_आधार_क्रमांक,बच्चे,बच्चो_का_व्यवसाय,उत्तराधिकारी_का_पता};
            
            DefaultTableModel tblModel = (DefaultTableModel)jTable2.getModel();
            DefaultTableModel tblModelH = (DefaultTableModel)jTable3.getModel();
            tblModel.addRow(tbData);
            tblModelH.addRow(tbDataH);
            } 
             
        } catch (SQLException ex) {
            Logger.getLogger(SearchFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SearchFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchallActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String sql="Select count(यूनिक_कोड) from personal_details";
            pst=sqlConn.prepareStatement(sql);
            rs=pst.executeQuery();
            if(rs.next()){
                String sum =rs.getString("count(यूनिक_कोड)");
                counttxt.setText(sum);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    
    public void exportToExcel(){
        XSSFWorkbook wb = new XSSFWorkbook();
        XSSFSheet ws = wb.createSheet();
        XSSFSheet wsH = wb.createSheet();
        DefaultTableModel tblmodel = (DefaultTableModel)jTable2.getModel();
        DefaultTableModel tblmodelH = (DefaultTableModel)jTable3.getModel();
        TreeMap<String, Object[]> map = new TreeMap<>();
        TreeMap<String, Object[]> mapH = new TreeMap<>();
        
        map.put("0", new Object[]{tblmodel.getColumnName(0),tblmodel.getColumnName(1),tblmodel.getColumnName(2),tblmodel.getColumnName(3),tblmodel.getColumnName(4),tblmodel.getColumnName(5),tblmodel.getColumnName(6),tblmodel.getColumnName(7),tblmodel.getColumnName(8),tblmodel.getColumnName(9),tblmodel.getColumnName(10),tblmodel.getColumnName(11),tblmodel.getColumnName(12),tblmodel.getColumnName(13),tblmodel.getColumnName(14)});
        
        mapH.put("0", new Object[]{tblmodelH.getColumnName(0),tblmodelH.getColumnName(1),tblmodelH.getColumnName(2),tblmodelH.getColumnName(3),tblmodelH.getColumnName(4),tblmodelH.getColumnName(5),tblmodelH.getColumnName(6),tblmodelH.getColumnName(7),tblmodelH.getColumnName(8),tblmodelH.getColumnName(9),tblmodelH.getColumnName(10),tblmodelH.getColumnName(11),tblmodelH.getColumnName(12),tblmodelH.getColumnName(13),tblmodelH.getColumnName(14),tblmodelH.getColumnName(15),tblmodelH.getColumnName(16),tblmodelH.getColumnName(17),tblmodelH.getColumnName(18),tblmodelH.getColumnName(19),tblmodelH.getColumnName(20),tblmodelH.getColumnName(21),tblmodelH.getColumnName(22),tblmodelH.getColumnName(23),tblmodelH.getColumnName(24),tblmodelH.getColumnName(25)});
        
        
        for (int i = 1; i < tblmodel.getRowCount(); i++) {
            map.put(Integer.toString(i),new Object[]{tblmodel.getValueAt(i, 0),tblmodel.getValueAt(i, 1),tblmodel.getValueAt(i, 2),tblmodel.getValueAt(i, 3),tblmodel.getValueAt(i, 4),tblmodel.getValueAt(i, 5),tblmodel.getValueAt(i, 6),tblmodel.getValueAt(i, 7),tblmodel.getValueAt(i, 8),tblmodel.getValueAt(i, 9),tblmodel.getValueAt(i, 10),tblmodel.getValueAt(i, 11),tblmodel.getValueAt(i, 12),tblmodel.getValueAt(i, 13),tblmodel.getValueAt(i, 14)});
            
         
        }
        for (int i = 1; i < tblmodelH.getRowCount(); i++) {
           mapH.put(Integer.toString(i),new Object[]{tblmodelH.getValueAt(i, 0),tblmodelH.getValueAt(i, 1),tblmodelH.getValueAt(i, 2),tblmodelH.getValueAt(i, 3),tblmodelH.getValueAt(i, 4),tblmodelH.getValueAt(i, 5),tblmodelH.getValueAt(i, 6),tblmodelH.getValueAt(i, 7),tblmodelH.getValueAt(i, 8),tblmodelH.getValueAt(i, 9),tblmodelH.getValueAt(i, 10),tblmodelH.getValueAt(i, 11),tblmodelH.getValueAt(i, 12),tblmodelH.getValueAt(i, 13),tblmodelH.getValueAt(i, 14),tblmodelH.getValueAt(i, 15),tblmodelH.getValueAt(i, 16),tblmodelH.getValueAt(i, 17),tblmodelH.getValueAt(i, 18),tblmodelH.getValueAt(i, 19),tblmodelH.getValueAt(i, 20),tblmodelH.getValueAt(i, 21),tblmodelH.getValueAt(i, 22),tblmodelH.getValueAt(i, 23),tblmodelH.getValueAt(i, 24),tblmodelH.getValueAt(i, 25)});
            
         
        }
        Set<String> id = map.keySet();
        Set<String> idH = mapH.keySet();
        XSSFRow fRow;
        XSSFRow fRowH;
        int rowId=0;
        int rowIdH=0;
        for(String key : id){
            fRow = ws.createRow(rowId++);
            
            Object[] value = map.get(key);
            int cellId =0;
            
            for(Object object : value){
                XSSFCell cell = fRow.createCell(cellId++);
                cell.setCellValue(object.toString());
            }
        }
        for(String keyH : idH){
            fRowH = wsH.createRow(rowIdH++);
            
            Object[] valueH = mapH.get(keyH);
            int cellIdH =0;
            
            for(Object object : valueH){
                XSSFCell cellH = fRowH.createCell(cellIdH++);
                cellH.setCellValue(object.toString());
            }
        }
        try {
             FileOutputStream fos = new FileOutputStream(new File(txt_filepath.getText()));
             wb.write(fos);
             JOptionPane.showMessageDialog(this, "File Exported Successfully at "+txt_filepath.getText());
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
    
    
    public void cleartable(){
        DefaultTableModel tblmodel = (DefaultTableModel)jTable2.getModel();
        tblmodel.setRowCount(1);
        DefaultTableModel tblmodelH = (DefaultTableModel)jTable3.getModel();
        tblmodelH.setRowCount(1);
    }
    /**
     * @param args the command line arguments
     */
    
      /*    public static final String FONT_PATH = "fonts/Kruti Dev 010 Regular.ttf";
    
    private static Font createFont(String url) throws FontFormatException, IOException {
        return Font.createFont(Font.TRUETYPE_FONT,MainFrame.class.getClassLoader().getResourceAsStream(FONT_PATH))
                .deriveFont(30, 80f);
}*/

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CBblood;
    private javax.swing.JComboBox<String> CBpost;
    private javax.swing.JRadioButton bloodRad;
    private javax.swing.JButton bloodbtn;
    private javax.swing.JButton browsebtn;
    private javax.swing.ButtonGroup btngrp1;
    private javax.swing.JTextField counttxt;
    private javax.swing.JRadioButton dateRad;
    private javax.swing.JButton datebtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton exportbtn;
    private com.toedter.calendar.JDateChooser fromdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JRadioButton postRad;
    private javax.swing.JButton postbtn;
    private javax.swing.JButton printbtn;
    private javax.swing.JButton searchall;
    private com.toedter.calendar.JDateChooser todate;
    private javax.swing.JTextField txt_filepath;
    private javax.swing.JRadioButton uniquecodeRad;
    private javax.swing.JButton uniquecodebtn;
    private javax.swing.JTextField uniquecodetxt;
    // End of variables declaration//GEN-END:variables

    private TableCellRenderer setFont(String kruti_dev_010, int BOLD, int i) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
